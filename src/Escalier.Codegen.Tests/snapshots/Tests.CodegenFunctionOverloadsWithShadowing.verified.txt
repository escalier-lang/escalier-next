input: 
        fn add(a: number, b: number) -> number {
          let add = fn (a: number, b: number) => a + b;
          return add(a, b);
        }
        fn add(a: string, b: string) -> string {
          return a ++ b;
        }
        let sum = add(5, 10);
        let msg = add("hello, ", "world");
        
--- output (js) ---
function add(__arg0__, __arg1__) {
  if (typeof __arg0__ == "number" && typeof __arg1__ == "number") {
    var add = (a, b) => {
      return a + b;
    };
    return add(__arg0__, __arg1__);
  } else if (typeof __arg0__ == "string" && typeof __arg1__ == "string") {
    return __arg0__ + __arg1__;
  } else {
    throw new TypeError();
  }
}
var sum = add(5, 10);
var msg = add("hello, ", "world");

--- output (dts) ---
function add(a: number, b: number): number;
function add(a: string, b: string): string;
// @escType - number
const sum: number;
// @escType - string
const msg: string;
