input: 
    class Foo<T> extends Bar<T> {}
    
output: Success: { Body =
   [Stmt
      (Decl
         (Class
            { Export = false
              Declare = false
              Ident = { Name = "Foo"
                        Loc = None }
              Class =
               { TypeParams = Some { Params = [{ Name = { Name = "T"
                                                          Loc = None }
                                                 IsIn = false
                                                 IsOut = false
                                                 IsConst = false
                                                 Constraint = None
                                                 Default = None
                                                 Loc = None }]
                                     Loc = None }
                 IsAbstract = false
                 Super =
                  Some
                    { Loc = None
                      TypeName = Identifier { Name = "Bar"
                                              Loc = None }
                      TypeParams =
                       Some
                         { Params =
                            [TsTypeRef { Loc = None
                                         TypeName = Identifier { Name = "T"
                                                                 Loc = None }
                                         TypeParams = None }]
                           Loc = None } }
                 Implements = None
                 Body = []
                 Loc = None } }))]
  Shebang = None
  Loc = None }