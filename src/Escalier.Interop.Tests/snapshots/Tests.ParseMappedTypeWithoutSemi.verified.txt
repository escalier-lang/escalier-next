input: 
    export type InferPropsInner<V> = {
      [K in keyof V]-?: InferType<V[K]>;
    };
    
output: Success: { Body =
   [ModuleDecl
      (ExportDecl
         { Decl =
            TsTypeAlias
              { Declare = false
                Id = { Name = "InferPropsInner"
                       Loc = None }
                TypeParams = Some { Params = [{ Name = { Name = "V"
                                                         Loc = None }
                                                IsIn = false
                                                IsOut = false
                                                IsConst = false
                                                Constraint = None
                                                Default = None
                                                Loc = None }]
                                    Loc = None }
                TypeAnn =
                 TsMappedType
                   { Readonly = None
                     TypeParam =
                      { Name = { Name = "K"
                                 Loc = None }
                        IsIn = true
                        IsOut = false
                        IsConst = false
                        Constraint =
                         Some
                           (TsTypeOperator
                              { Op = KeyOf
                                TypeAnn =
                                 TsTypeRef
                                   { Loc = None
                                     TypeName = Identifier { Name = "V"
                                                             Loc = None }
                                     TypeParams = None }
                                Loc = None })
                        Default = None
                        Loc = None }
                     NameType = None
                     Optional = Some Minus
                     TypeAnn =
                      TsTypeRef
                        { Loc = None
                          TypeName = Identifier { Name = "InferType"
                                                  Loc = None }
                          TypeParams =
                           Some
                             { Params =
                                [TsIndexedAccessType
                                   { Readonly = false
                                     ObjType =
                                      TsTypeRef
                                        { Loc = None
                                          TypeName = Identifier { Name = "V"
                                                                  Loc = None }
                                          TypeParams = None }
                                     IndexType =
                                      TsTypeRef
                                        { Loc = None
                                          TypeName = Identifier { Name = "K"
                                                                  Loc = None }
                                          TypeParams = None }
                                     Loc = None }]
                               Loc = None } }
                     Loc = None }
                Loc = None }
           Loc = None })]
  Shebang = None
  Loc = None }