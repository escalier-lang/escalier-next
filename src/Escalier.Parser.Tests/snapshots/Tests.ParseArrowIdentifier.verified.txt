input: let fst = fn (x, y) => x;
output: Ok
  { Items =
     [Stmt
        { Kind =
           Decl
             { Kind =
                VarDecl
                  { Declare = false
                    Pattern = { Kind = Ident { Name = "fst"
                                               IsMut = false
                                               Assertion = None }
                                Span = { Start = (Ln: 1, Col: 5)
                                         Stop = (Ln: 1, Col: 9) }
                                InferredType = None }
                    TypeAnn = None
                    Init =
                     Some
                       { Kind =
                          Function
                            { Sig =
                               { TypeParams = None
                                 Self = None
                                 ParamList =
                                  [{ Pattern =
                                      { Kind = Ident { Name = "x"
                                                       IsMut = false
                                                       Assertion = None }
                                        Span = { Start = (Ln: 1, Col: 15)
                                                 Stop = (Ln: 1, Col: 16) }
                                        InferredType = None }
                                     Optional = false
                                     TypeAnn = None };
                                   { Pattern =
                                      { Kind = Ident { Name = "y"
                                                       IsMut = false
                                                       Assertion = None }
                                        Span = { Start = (Ln: 1, Col: 18)
                                                 Stop = (Ln: 1, Col: 19) }
                                        InferredType = None }
                                     Optional = false
                                     TypeAnn = None }]
                                 ReturnType = None
                                 Throws = None
                                 IsAsync = false }
                              Body = Expr { Kind = Identifier { Name = "x" }
                                            Span = { Start = (Ln: 1, Col: 24)
                                                     Stop = (Ln: 1, Col: 25) }
                                            InferredType = None }
                              Captures = None
                              InferredType = None }
                         Span = { Start = (Ln: 1, Col: 11)
                                  Stop = (Ln: 1, Col: 25) }
                         InferredType = None }
                    Else = None }
               Span = { Start = (Ln: 1, Col: 1)
                        Stop = (Ln: 1, Col: 26) } }
          Span = { Start = (Ln: 1, Col: 1)
                   Stop = (Ln: 1, Col: 26) } }] }