input: 
    let bar = async fn () {
      let x = await foo();
      return x + 10;
    };
    
output: Ok
  { Items =
     [Stmt
        { Kind =
           Decl
             { Kind =
                VarDecl
                  { Declare = false
                    Export = false
                    Pattern = { Kind = Ident { Name = "bar"
                                               IsMut = false
                                               Assertion = None }
                                Span = { Start = (Ln: 2, Col: 9)
                                         Stop = (Ln: 2, Col: 13) }
                                InferredType = None }
                    TypeAnn = None
                    Init =
                     Some
                       { Kind =
                          Function
                            { Sig = { TypeParams = None
                                      Self = None
                                      ParamList = []
                                      ReturnType = None
                                      Throws = None
                                      IsAsync = true }
                              Body =
                               Block
                                 { Span = { Start = (Ln: 2, Col: 27)
                                            Stop = (Ln: 5, Col: 6) }
                                   Stmts =
                                    [{ Kind =
                                        Decl
                                          { Kind =
                                             VarDecl
                                               { Declare = false
                                                 Export = false
                                                 Pattern =
                                                  { Kind =
                                                     Ident { Name = "x"
                                                             IsMut = false
                                                             Assertion = None }
                                                    Span =
                                                     { Start = (Ln: 3, Col: 11)
                                                       Stop = (Ln: 3, Col: 13) }
                                                    InferredType = None }
                                                 TypeAnn = None
                                                 Init =
                                                  Some
                                                    { Kind =
                                                       Await
                                                         { Value =
                                                            { Kind =
                                                               Call
                                                                 { Callee =
                                                                    { Kind =
                                                                       Identifier
                                                                         { Name =
                                                                            "foo" }
                                                                      Span =
                                                                       { Start =
                                                                          (Ln: 3, Col: 21)
                                                                         Stop =
                                                                          (Ln: 3, Col: 24) }
                                                                      InferredType =
                                                                       None }
                                                                   TypeArgs =
                                                                    None
                                                                   Args = []
                                                                   OptChain =
                                                                    false
                                                                   Throws = None }
                                                              Span =
                                                               { Start =
                                                                  (Ln: 3, Col: 21)
                                                                 Stop =
                                                                  (Ln: 3, Col: 26) }
                                                              InferredType =
                                                               None }
                                                           Throws = None }
                                                      Span =
                                                       { Start =
                                                          (Ln: 3, Col: 21)
                                                         Stop = (Ln: 3, Col: 26) }
                                                      InferredType = None }
                                                 Else = None }
                                            Span = { Start = (Ln: 3, Col: 7)
                                                     Stop = (Ln: 4, Col: 7) } }
                                       Span = { Start = (Ln: 3, Col: 7)
                                                Stop = (Ln: 4, Col: 7) } };
                                     { Kind =
                                        Return
                                          (Some
                                             { Kind =
                                                Binary
                                                  { Op = "+"
                                                    Left =
                                                     { Kind =
                                                        Identifier
                                                          { Name = "x" }
                                                       Span =
                                                        { Start =
                                                           (Ln: 4, Col: 14)
                                                          Stop =
                                                           (Ln: 4, Col: 16) }
                                                       InferredType = None }
                                                    Right =
                                                     { Kind =
                                                        Literal
                                                          (Number (Int 10))
                                                       Span =
                                                        { Start =
                                                           (Ln: 4, Col: 18)
                                                          Stop =
                                                           (Ln: 4, Col: 20) }
                                                       InferredType = None } }
                                               Span =
                                                { Start = (Ln: 4, Col: 14)
                                                  Stop = (Ln: 4, Col: 20) }
                                               InferredType = None })
                                       Span = { Start = (Ln: 4, Col: 7)
                                                Stop = (Ln: 5, Col: 5) } }] }
                              Captures = None }
                         Span = { Start = (Ln: 2, Col: 15)
                                  Stop = (Ln: 5, Col: 6) }
                         InferredType = None }
                    Else = None }
               Span = { Start = (Ln: 2, Col: 5)
                        Stop = (Ln: 6, Col: 5) } }
          Span = { Start = (Ln: 2, Col: 5)
                   Stop = (Ln: 6, Col: 5) } }] }