input: {
      new fn () -> symbol,
      fn () -> symbol,
    }
output: Ok
  { Kind =
     Object
       [Constructor { TypeParams = None
                      ParamList = []
                      ReturnType = { Kind = Keyword Symbol
                                     Span = { Start = (Ln: 2, Col: 20)
                                              Stop = (Ln: 2, Col: 26) }
                                     InferredType = None }
                      Throws = None
                      IsAsync = false };
        Callable { TypeParams = None
                   ParamList = []
                   ReturnType = { Kind = Keyword Symbol
                                  Span = { Start = (Ln: 3, Col: 16)
                                           Stop = (Ln: 3, Col: 22) }
                                  InferredType = None }
                   Throws = None
                   IsAsync = false }]
    Span = { Start = (Ln: 1, Col: 1)
             Stop = (Ln: 4, Col: 6) }
    InferredType = None }