input: 
    match value {
      | MyEnum.Foo(a, b, c) => a + b + c
      | MyEnum.Bar([x, y]) => x * y
      | MyEnum.Baz(z) => z
    }
    
output: Ok
  { Items =
     [Stmt
        { Kind =
           Expr
             { Kind =
                Match
                  ({ Kind = Identifier "value"
                     Span = { Start = (Ln: 2, Col: 11)
                              Stop = (Ln: 2, Col: 17) }
                     InferredType = None },
                   [{ Span = { Start = (Ln: 3, Col: 7)
                               Stop = (Ln: 4, Col: 7) }
                      Pattern =
                       { Kind =
                          Enum
                            { Ident = Member (Ident "MyEnum", "Foo")
                              Args =
                               Some
                                 [{ Kind = Ident { Name = "a"
                                                   IsMut = false
                                                   Assertion = None }
                                    Span = { Start = (Ln: 3, Col: 20)
                                             Stop = (Ln: 3, Col: 21) }
                                    InferredType = None };
                                  { Kind = Ident { Name = "b"
                                                   IsMut = false
                                                   Assertion = None }
                                    Span = { Start = (Ln: 3, Col: 23)
                                             Stop = (Ln: 3, Col: 24) }
                                    InferredType = None };
                                  { Kind = Ident { Name = "c"
                                                   IsMut = false
                                                   Assertion = None }
                                    Span = { Start = (Ln: 3, Col: 26)
                                             Stop = (Ln: 3, Col: 27) }
                                    InferredType = None }] }
                         Span = { Start = (Ln: 3, Col: 9)
                                  Stop = (Ln: 3, Col: 29) }
                         InferredType = None }
                      Guard = None
                      Body =
                       Expr
                         { Kind =
                            Binary
                              ("+",
                               { Kind =
                                  Binary
                                    ("+", { Kind = Identifier "a"
                                            Span = { Start = (Ln: 3, Col: 32)
                                                     Stop = (Ln: 3, Col: 34) }
                                            InferredType = None },
                                     { Kind = Identifier "b"
                                       Span = { Start = (Ln: 3, Col: 36)
                                                Stop = (Ln: 3, Col: 38) }
                                       InferredType = None })
                                 Span = { Start = (Ln: 3, Col: 32)
                                          Stop = (Ln: 3, Col: 38) }
                                 InferredType = None },
                               { Kind = Identifier "c"
                                 Span = { Start = (Ln: 3, Col: 40)
                                          Stop = (Ln: 4, Col: 7) }
                                 InferredType = None })
                           Span = { Start = (Ln: 3, Col: 32)
                                    Stop = (Ln: 4, Col: 7) }
                           InferredType = None } };
                    { Span = { Start = (Ln: 4, Col: 7)
                               Stop = (Ln: 5, Col: 7) }
                      Pattern =
                       { Kind =
                          Enum
                            { Ident = Member (Ident "MyEnum", "Bar")
                              Args =
                               Some
                                 [{ Kind =
                                     Tuple
                                       { Elems =
                                          [{ Kind = Ident { Name = "x"
                                                            IsMut = false
                                                            Assertion = None }
                                             Span = { Start = (Ln: 4, Col: 21)
                                                      Stop = (Ln: 4, Col: 22) }
                                             InferredType = None };
                                           { Kind = Ident { Name = "y"
                                                            IsMut = false
                                                            Assertion = None }
                                             Span = { Start = (Ln: 4, Col: 24)
                                                      Stop = (Ln: 4, Col: 25) }
                                             InferredType = None }]
                                         Immutable = false }
                                    Span = { Start = (Ln: 4, Col: 20)
                                             Stop = (Ln: 4, Col: 26) }
                                    InferredType = None }] }
                         Span = { Start = (Ln: 4, Col: 9)
                                  Stop = (Ln: 4, Col: 28) }
                         InferredType = None }
                      Guard = None
                      Body =
                       Expr
                         { Kind =
                            Binary
                              ("*", { Kind = Identifier "x"
                                      Span = { Start = (Ln: 4, Col: 31)
                                               Stop = (Ln: 4, Col: 33) }
                                      InferredType = None },
                               { Kind = Identifier "y"
                                 Span = { Start = (Ln: 4, Col: 35)
                                          Stop = (Ln: 5, Col: 7) }
                                 InferredType = None })
                           Span = { Start = (Ln: 4, Col: 31)
                                    Stop = (Ln: 5, Col: 7) }
                           InferredType = None } };
                    { Span = { Start = (Ln: 5, Col: 7)
                               Stop = (Ln: 6, Col: 5) }
                      Pattern =
                       { Kind =
                          Enum
                            { Ident = Member (Ident "MyEnum", "Baz")
                              Args = Some [{ Kind = Ident { Name = "z"
                                                            IsMut = false
                                                            Assertion = None }
                                             Span = { Start = (Ln: 5, Col: 20)
                                                      Stop = (Ln: 5, Col: 21) }
                                             InferredType = None }] }
                         Span = { Start = (Ln: 5, Col: 9)
                                  Stop = (Ln: 5, Col: 23) }
                         InferredType = None }
                      Guard = None
                      Body = Expr { Kind = Identifier "z"
                                    Span = { Start = (Ln: 5, Col: 26)
                                             Stop = (Ln: 6, Col: 5) }
                                    InferredType = None } }])
               Span = { Start = (Ln: 2, Col: 5)
                        Stop = (Ln: 7, Col: 5) }
               InferredType = None }
          Span = { Start = (Ln: 2, Col: 5)
                   Stop = (Ln: 7, Col: 5) } }] }