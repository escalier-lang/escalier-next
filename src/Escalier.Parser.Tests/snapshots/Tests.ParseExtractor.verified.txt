input: 
    let foo = Foo("hello");
    let Foo(msg) = foo;
    
output: Ok
  { Items =
     [Stmt
        { Kind =
           Decl
             { Kind =
                VarDecl
                  { Declare = false
                    Export = false
                    Pattern = { Kind = Ident { Name = "foo"
                                               IsMut = false
                                               Assertion = None }
                                Span = { Start = (Ln: 2, Col: 9)
                                         Stop = (Ln: 2, Col: 13) }
                                InferredType = None }
                    TypeAnn = None
                    Init =
                     Some
                       { Kind =
                          Call { Callee = { Kind = Identifier { Name = "Foo" }
                                            Span = { Start = (Ln: 2, Col: 15)
                                                     Stop = (Ln: 2, Col: 18) }
                                            InferredType = None }
                                 TypeArgs = None
                                 Args = [{ Kind = Literal (String "hello")
                                           Span = { Start = (Ln: 2, Col: 19)
                                                    Stop = (Ln: 2, Col: 26) }
                                           InferredType = None }]
                                 OptChain = false
                                 Throws = None }
                         Span = { Start = (Ln: 2, Col: 15)
                                  Stop = (Ln: 2, Col: 27) }
                         InferredType = None }
                    Else = None }
               Span = { Start = (Ln: 2, Col: 5)
                        Stop = (Ln: 3, Col: 5) } }
          Span = { Start = (Ln: 2, Col: 5)
                   Stop = (Ln: 3, Col: 5) } };
      Stmt
        { Kind =
           Decl
             { Kind =
                VarDecl
                  { Declare = false
                    Export = false
                    Pattern =
                     { Kind =
                        Extractor { Name = Ident "Foo"
                                    Args = [{ Kind = Ident { Name = "msg"
                                                             IsMut = false
                                                             Assertion = None }
                                              Span = { Start = (Ln: 3, Col: 13)
                                                       Stop = (Ln: 3, Col: 16) }
                                              InferredType = None }] }
                       Span = { Start = (Ln: 3, Col: 9)
                                Stop = (Ln: 3, Col: 18) }
                       InferredType = None }
                    TypeAnn = None
                    Init = Some { Kind = Identifier { Name = "foo" }
                                  Span = { Start = (Ln: 3, Col: 20)
                                           Stop = (Ln: 3, Col: 23) }
                                  InferredType = None }
                    Else = None }
               Span = { Start = (Ln: 3, Col: 5)
                        Stop = (Ln: 4, Col: 5) } }
          Span = { Start = (Ln: 3, Col: 5)
                   Stop = (Ln: 4, Col: 5) } }] }