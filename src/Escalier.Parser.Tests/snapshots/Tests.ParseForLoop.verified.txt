input: 
    for x in [1, 2, 3] {
      print(x);
    }
    
output: Ok
  { Items =
     [Stmt
        { Kind =
           For
             ({ Kind = Ident { Name = "x"
                               IsMut = false
                               Assertion = None }
                Span = { Start = (Ln: 2, Col: 9)
                         Stop = (Ln: 2, Col: 11) }
                InferredType = None },
              { Kind =
                 Tuple
                   { Elems =
                      [{ Kind = Literal (Number (Int 1))
                         Span = { Start = (Ln: 2, Col: 15)
                                  Stop = (Ln: 2, Col: 16) }
                         InferredType = None };
                       { Kind = Literal (Number (Int 2))
                         Span = { Start = (Ln: 2, Col: 18)
                                  Stop = (Ln: 2, Col: 19) }
                         InferredType = None };
                       { Kind = Literal (Number (Int 3))
                         Span = { Start = (Ln: 2, Col: 21)
                                  Stop = (Ln: 2, Col: 22) }
                         InferredType = None }]
                     Immutable = false }
                Span = { Start = (Ln: 2, Col: 14)
                         Stop = (Ln: 2, Col: 24) }
                InferredType = None },
              { Span = { Start = (Ln: 2, Col: 24)
                         Stop = (Ln: 5, Col: 5) }
                Stmts =
                 [{ Kind =
                     Expr
                       { Kind =
                          Call { Callee = { Kind = Identifier "print"
                                            Span = { Start = (Ln: 3, Col: 7)
                                                     Stop = (Ln: 3, Col: 12) }
                                            InferredType = None }
                                 TypeArgs = None
                                 Args = [{ Kind = Identifier "x"
                                           Span = { Start = (Ln: 3, Col: 13)
                                                    Stop = (Ln: 3, Col: 14) }
                                           InferredType = None }]
                                 OptChain = false
                                 Throws = None }
                         Span = { Start = (Ln: 3, Col: 7)
                                  Stop = (Ln: 3, Col: 15) }
                         InferredType = None }
                    Span = { Start = (Ln: 3, Col: 7)
                             Stop = (Ln: 3, Col: 15) } }] })
          Span = { Start = (Ln: 2, Col: 5)
                   Stop = (Ln: 5, Col: 5) } }] }