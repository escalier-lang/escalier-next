input: 
    if let Option.Some[x] = maybe {
      print(x);
    };
    
output: Ok
  { Items =
     [Stmt
        { Kind =
           Expr
             { Kind =
                IfLet
                  { Pattern =
                     { Kind =
                        Enum
                          { Ident = Member (Ident "Option", "Some")
                            Arg =
                             Some
                               { Kind =
                                  Tuple
                                    { Elems =
                                       [{ Kind = Ident { Name = "x"
                                                         IsMut = false
                                                         Assertion = None }
                                          Span = { Start = (Ln: 2, Col: 24)
                                                   Stop = (Ln: 2, Col: 25) }
                                          InferredType = None }]
                                      Immutable = false }
                                 Span = { Start = (Ln: 2, Col: 23)
                                          Stop = (Ln: 2, Col: 27) }
                                 InferredType = None } }
                       Span = { Start = (Ln: 2, Col: 12)
                                Stop = (Ln: 2, Col: 27) }
                       InferredType = None }
                    Target = { Kind = Identifier { Name = "maybe" }
                               Span = { Start = (Ln: 2, Col: 29)
                                        Stop = (Ln: 2, Col: 35) }
                               InferredType = None }
                    Then =
                     { Span = { Start = (Ln: 2, Col: 35)
                                Stop = (Ln: 4, Col: 6) }
                       Stmts =
                        [{ Kind =
                            Expr
                              { Kind =
                                 Call
                                   { Callee =
                                      { Kind = Identifier { Name = "print" }
                                        Span = { Start = (Ln: 3, Col: 7)
                                                 Stop = (Ln: 3, Col: 12) }
                                        InferredType = None }
                                     TypeArgs = None
                                     Args =
                                      [{ Kind = Identifier { Name = "x" }
                                         Span = { Start = (Ln: 3, Col: 13)
                                                  Stop = (Ln: 3, Col: 14) }
                                         InferredType = None }]
                                     OptChain = false
                                     Throws = None }
                                Span = { Start = (Ln: 3, Col: 7)
                                         Stop = (Ln: 3, Col: 15) }
                                InferredType = None }
                           Span = { Start = (Ln: 3, Col: 7)
                                    Stop = (Ln: 3, Col: 15) } }] }
                    Else = None }
               Span = { Start = (Ln: 2, Col: 5)
                        Stop = (Ln: 4, Col: 6) }
               InferredType = None }
          Span = { Start = (Ln: 2, Col: 5)
                   Stop = (Ln: 4, Col: 6) } }] }