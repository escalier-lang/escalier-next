input: 
    let y = if let x = value {
      x + 1;
    } else {
      0;
    };
    
output: Ok
  { Items =
     [Stmt
        { Kind =
           Decl
             { Kind =
                VarDecl
                  { Declare = false
                    Export = false
                    Pattern = { Kind = Ident { Name = "y"
                                               IsMut = false
                                               Assertion = None }
                                Span = { Start = (Ln: 2, Col: 9)
                                         Stop = (Ln: 2, Col: 11) }
                                InferredType = None }
                    TypeAnn = None
                    Init =
                     Some
                       { Kind =
                          IfLet
                            { Pattern = { Kind = Ident { Name = "x"
                                                         IsMut = false
                                                         Assertion = None }
                                          Span = { Start = (Ln: 2, Col: 20)
                                                   Stop = (Ln: 2, Col: 22) }
                                          InferredType = None }
                              Target = { Kind = Identifier { Name = "value" }
                                         Span = { Start = (Ln: 2, Col: 24)
                                                  Stop = (Ln: 2, Col: 30) }
                                         InferredType = None }
                              Then =
                               { Span = { Start = (Ln: 2, Col: 30)
                                          Stop = (Ln: 4, Col: 7) }
                                 Stmts =
                                  [{ Kind =
                                      Expr
                                        { Kind =
                                           Binary
                                             { Op = "+"
                                               Left =
                                                { Kind =
                                                   Identifier { Name = "x" }
                                                  Span =
                                                   { Start = (Ln: 3, Col: 7)
                                                     Stop = (Ln: 3, Col: 9) }
                                                  InferredType = None }
                                               Right =
                                                { Kind =
                                                   Literal (Number (Int 1))
                                                  Span =
                                                   { Start = (Ln: 3, Col: 11)
                                                     Stop = (Ln: 3, Col: 12) }
                                                  InferredType = None } }
                                          Span = { Start = (Ln: 3, Col: 7)
                                                   Stop = (Ln: 3, Col: 12) }
                                          InferredType = None }
                                     Span = { Start = (Ln: 3, Col: 7)
                                              Stop = (Ln: 3, Col: 12) } }] }
                              Else =
                               Some
                                 (Block
                                    { Span = { Start = (Ln: 4, Col: 12)
                                               Stop = (Ln: 6, Col: 6) }
                                      Stmts =
                                       [{ Kind =
                                           Expr
                                             { Kind = Literal (Number (Int 0))
                                               Span = { Start = (Ln: 5, Col: 7)
                                                        Stop = (Ln: 5, Col: 8) }
                                               InferredType = None }
                                          Span = { Start = (Ln: 5, Col: 7)
                                                   Stop = (Ln: 5, Col: 8) } }] }) }
                         Span = { Start = (Ln: 2, Col: 13)
                                  Stop = (Ln: 6, Col: 6) }
                         InferredType = None }
                    Else = None }
               Span = { Start = (Ln: 2, Col: 5)
                        Stop = (Ln: 7, Col: 5) } }
          Span = { Start = (Ln: 2, Col: 5)
                   Stop = (Ln: 7, Col: 5) } }] }