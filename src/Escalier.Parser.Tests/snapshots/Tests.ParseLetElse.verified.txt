input: 
    let {x, y} = point else {
      print("point is not a Point");
    };
    
output: Ok
  { Items =
     [Stmt
        { Kind =
           Decl
             { Kind =
                VarDecl
                  { Pattern =
                     { Kind =
                        Object
                          { Elems =
                             [ShorthandPat { Span = { Start = (Ln: 2, Col: 10)
                                                      Stop = (Ln: 2, Col: 11) }
                                             Name = "x"
                                             IsMut = false
                                             Default = None
                                             Assertion = None };
                              ShorthandPat { Span = { Start = (Ln: 2, Col: 13)
                                                      Stop = (Ln: 2, Col: 14) }
                                             Name = "y"
                                             IsMut = false
                                             Default = None
                                             Assertion = None }]
                            Immutable = false }
                       Span = { Start = (Ln: 2, Col: 9)
                                Stop = (Ln: 2, Col: 16) }
                       InferredType = None }
                    TypeAnn = None
                    Init = { Kind = Identifier "point"
                             Span = { Start = (Ln: 2, Col: 18)
                                      Stop = (Ln: 2, Col: 24) }
                             InferredType = None }
                    Else =
                     Some
                       { Span = { Start = (Ln: 2, Col: 29)
                                  Stop = (Ln: 4, Col: 6) }
                         Stmts =
                          [{ Kind =
                              Expr
                                { Kind =
                                   Call
                                     { Callee =
                                        { Kind = Identifier "print"
                                          Span = { Start = (Ln: 3, Col: 7)
                                                   Stop = (Ln: 3, Col: 12) }
                                          InferredType = None }
                                       TypeArgs = None
                                       Args =
                                        [{ Kind =
                                            Literal
                                              (String "point is not a Point")
                                           Span = { Start = (Ln: 3, Col: 13)
                                                    Stop = (Ln: 3, Col: 35) }
                                           InferredType = None }]
                                       OptChain = false
                                       Throws = None }
                                  Span = { Start = (Ln: 3, Col: 7)
                                           Stop = (Ln: 3, Col: 36) }
                                  InferredType = None }
                             Span = { Start = (Ln: 3, Col: 7)
                                      Stop = (Ln: 3, Col: 36) } }] } }
               Span = { Start = (Ln: 2, Col: 5)
                        Stop = (Ln: 5, Col: 5) } }
          Span = { Start = (Ln: 2, Col: 5)
                   Stop = (Ln: 5, Col: 5) } }] }