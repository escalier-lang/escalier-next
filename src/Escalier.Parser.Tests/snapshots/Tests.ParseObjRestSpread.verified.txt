input: 
    let obj = {a: 5, b: "hello", c: true}
    let {a, ...rest} = obj
  
output: Success: [{ Kind =
    Decl
      { Kind =
         VarDecl
           ({ Kind = Identifier { Span = { Start = (Ln: 2, Col: 9)
                                           Stop = (Ln: 2, Col: 13) }
                                  Name = "obj"
                                  IsMut = false }
              Span = { Start = (Ln: 2, Col: 9)
                       Stop = (Ln: 2, Col: 13) }
              InferredType = None },
            { Kind =
               Object
                 [Property
                    ({ Start = (Ln: 2, Col: 16)
                       Stop = (Ln: 2, Col: 20) }, "a",
                     { Kind = Literal (Number "5")
                       Span = { Start = (Ln: 2, Col: 19)
                                Stop = (Ln: 2, Col: 20) }
                       InferredType = None });
                  Property
                    ({ Start = (Ln: 2, Col: 22)
                       Stop = (Ln: 2, Col: 32) }, "b",
                     { Kind = Literal (String "hello")
                       Span = { Start = (Ln: 2, Col: 25)
                                Stop = (Ln: 2, Col: 32) }
                       InferredType = None });
                  Property
                    ({ Start = (Ln: 2, Col: 34)
                       Stop = (Ln: 2, Col: 41) }, "c",
                     { Kind = Literal (Boolean true)
                       Span = { Start = (Ln: 2, Col: 37)
                                Stop = (Ln: 2, Col: 41) }
                       InferredType = None })]
              Span = { Start = (Ln: 2, Col: 15)
                       Stop = (Ln: 3, Col: 5) }
              InferredType = None }, None)
        Span = { Start = (Ln: 2, Col: 5)
                 Stop = (Ln: 3, Col: 5) } }
   Span = { Start = (Ln: 2, Col: 5)
            Stop = (Ln: 3, Col: 5) } };
 { Kind =
    Decl
      { Kind =
         VarDecl
           ({ Kind =
               Object
                 [ShorthandPat ({ Start = (Ln: 3, Col: 10)
                                  Stop = (Ln: 3, Col: 11) }, "a", None, false);
                  RestPat
                    ({ Start = (Ln: 3, Col: 13)
                       Stop = (Ln: 3, Col: 20) },
                     { Kind = Identifier { Span = { Start = (Ln: 3, Col: 16)
                                                    Stop = (Ln: 3, Col: 20) }
                                           Name = "rest"
                                           IsMut = false }
                       Span = { Start = (Ln: 3, Col: 16)
                                Stop = (Ln: 3, Col: 20) }
                       InferredType = None }, false)]
              Span = { Start = (Ln: 3, Col: 9)
                       Stop = (Ln: 3, Col: 22) }
              InferredType = None }, { Kind = Identifier "obj"
                                       Span = { Start = (Ln: 3, Col: 24)
                                                Stop = (Ln: 4, Col: 3) }
                                       InferredType = None }, None)
        Span = { Start = (Ln: 3, Col: 5)
                 Stop = (Ln: 4, Col: 3) } }
   Span = { Start = (Ln: 3, Col: 5)
            Stop = (Ln: 4, Col: 3) } }]