input: 
    let foo = fn(a?: number, b?: string) => a;
    
output: Ok
  { Items =
     [Stmt
        { Kind =
           Decl
             { Kind =
                VarDecl
                  { Pattern = { Kind = Ident { Name = "foo"
                                               IsMut = false
                                               Assertion = None }
                                Span = { Start = (Ln: 2, Col: 9)
                                         Stop = (Ln: 2, Col: 13) }
                                InferredType = None }
                    TypeAnn = None
                    Init =
                     { Kind =
                        Function
                          { Sig =
                             { TypeParams = None
                               Self = None
                               ParamList =
                                [{ Pattern =
                                    { Kind = Ident { Name = "a"
                                                     IsMut = false
                                                     Assertion = None }
                                      Span = { Start = (Ln: 2, Col: 18)
                                               Stop = (Ln: 2, Col: 19) }
                                      InferredType = None }
                                   TypeAnn =
                                    Some { Kind = Keyword Number
                                           Span = { Start = (Ln: 2, Col: 22)
                                                    Stop = (Ln: 2, Col: 28) }
                                           InferredType = None }
                                   Optional = true };
                                 { Pattern =
                                    { Kind = Ident { Name = "b"
                                                     IsMut = false
                                                     Assertion = None }
                                      Span = { Start = (Ln: 2, Col: 30)
                                               Stop = (Ln: 2, Col: 31) }
                                      InferredType = None }
                                   TypeAnn =
                                    Some { Kind = Keyword String
                                           Span = { Start = (Ln: 2, Col: 34)
                                                    Stop = (Ln: 2, Col: 40) }
                                           InferredType = None }
                                   Optional = true }]
                               ReturnType = None
                               Throws = None
                               IsAsync = false }
                            Body = Expr { Kind = Identifier "a"
                                          Span = { Start = (Ln: 2, Col: 45)
                                                   Stop = (Ln: 2, Col: 46) }
                                          InferredType = None } }
                       Span = { Start = (Ln: 2, Col: 15)
                                Stop = (Ln: 2, Col: 46) }
                       InferredType = None } }
               Span = { Start = (Ln: 2, Col: 5)
                        Stop = (Ln: 3, Col: 5) } }
          Span = { Start = (Ln: 2, Col: 5)
                   Stop = (Ln: 3, Col: 5) } }] }