input: 
    let foo = fn (x) =>
      match x {
        0 => "none",
        1 => "one",
        n if n < 0 => "negative",
        _ => "other",
      };
    
output: Ok
  { Items =
     [Stmt
        { Kind =
           Decl
             { Kind =
                VarDecl
                  { Declare = false
                    Export = false
                    Pattern = { Kind = Ident { Name = "foo"
                                               IsMut = false
                                               Assertion = None }
                                Span = { Start = (Ln: 2, Col: 9)
                                         Stop = (Ln: 2, Col: 13) }
                                InferredType = None }
                    TypeAnn = None
                    Init =
                     Some
                       { Kind =
                          Function
                            { Sig =
                               { TypeParams = None
                                 Self = None
                                 ParamList =
                                  [{ Pattern =
                                      { Kind = Ident { Name = "x"
                                                       IsMut = false
                                                       Assertion = None }
                                        Span = { Start = (Ln: 2, Col: 19)
                                                 Stop = (Ln: 2, Col: 20) }
                                        InferredType = None }
                                     Optional = false
                                     TypeAnn = None }]
                                 ReturnType = None
                                 Throws = None
                                 IsAsync = false }
                              Body =
                               Expr
                                 { Kind =
                                    Match
                                      { Target =
                                         { Kind = Identifier { Name = "x" }
                                           Span = { Start = (Ln: 3, Col: 13)
                                                    Stop = (Ln: 3, Col: 15) }
                                           InferredType = None }
                                        Cases =
                                         [{ Span = { Start = (Ln: 4, Col: 9)
                                                     Stop = (Ln: 5, Col: 9) }
                                            Pattern =
                                             { Kind = Literal (Number (Int 0))
                                               Span =
                                                { Start = (Ln: 4, Col: 9)
                                                  Stop = (Ln: 4, Col: 11) }
                                               InferredType = None }
                                            Guard = None
                                            Body =
                                             Expr
                                               { Kind = Literal (String "none")
                                                 Span =
                                                  { Start = (Ln: 4, Col: 14)
                                                    Stop = (Ln: 4, Col: 20) }
                                                 InferredType = None } };
                                          { Span = { Start = (Ln: 5, Col: 9)
                                                     Stop = (Ln: 6, Col: 9) }
                                            Pattern =
                                             { Kind = Literal (Number (Int 1))
                                               Span =
                                                { Start = (Ln: 5, Col: 9)
                                                  Stop = (Ln: 5, Col: 11) }
                                               InferredType = None }
                                            Guard = None
                                            Body =
                                             Expr
                                               { Kind = Literal (String "one")
                                                 Span =
                                                  { Start = (Ln: 5, Col: 14)
                                                    Stop = (Ln: 5, Col: 19) }
                                                 InferredType = None } };
                                          { Span = { Start = (Ln: 6, Col: 9)
                                                     Stop = (Ln: 7, Col: 9) }
                                            Pattern =
                                             { Kind = Ident { Name = "n"
                                                              IsMut = false
                                                              Assertion = None }
                                               Span =
                                                { Start = (Ln: 6, Col: 9)
                                                  Stop = (Ln: 6, Col: 11) }
                                               InferredType = None }
                                            Guard =
                                             Some
                                               { Kind =
                                                  Binary
                                                    { Op = "<"
                                                      Left =
                                                       { Kind =
                                                          Identifier
                                                            { Name = "n" }
                                                         Span =
                                                          { Start =
                                                             (Ln: 6, Col: 14)
                                                            Stop =
                                                             (Ln: 6, Col: 16) }
                                                         InferredType = None }
                                                      Right =
                                                       { Kind =
                                                          Literal
                                                            (Number (Int 0))
                                                         Span =
                                                          { Start =
                                                             (Ln: 6, Col: 18)
                                                            Stop =
                                                             (Ln: 6, Col: 20) }
                                                         InferredType = None } }
                                                 Span =
                                                  { Start = (Ln: 6, Col: 14)
                                                    Stop = (Ln: 6, Col: 20) }
                                                 InferredType = None }
                                            Body =
                                             Expr
                                               { Kind =
                                                  Literal (String "negative")
                                                 Span =
                                                  { Start = (Ln: 6, Col: 23)
                                                    Stop = (Ln: 6, Col: 33) }
                                                 InferredType = None } };
                                          { Span = { Start = (Ln: 7, Col: 9)
                                                     Stop = (Ln: 8, Col: 7) }
                                            Pattern =
                                             { Kind = Ident { Name = "_"
                                                              IsMut = false
                                                              Assertion = None }
                                               Span =
                                                { Start = (Ln: 7, Col: 9)
                                                  Stop = (Ln: 7, Col: 11) }
                                               InferredType = None }
                                            Guard = None
                                            Body =
                                             Expr
                                               { Kind = Literal (String "other")
                                                 Span =
                                                  { Start = (Ln: 7, Col: 14)
                                                    Stop = (Ln: 7, Col: 21) }
                                                 InferredType = None } }] }
                                   Span = { Start = (Ln: 3, Col: 7)
                                            Stop = (Ln: 8, Col: 8) }
                                   InferredType = None }
                              Captures = None }
                         Span = { Start = (Ln: 2, Col: 15)
                                  Stop = (Ln: 8, Col: 8) }
                         InferredType = None }
                    Else = None }
               Span = { Start = (Ln: 2, Col: 5)
                        Stop = (Ln: 9, Col: 5) } }
          Span = { Start = (Ln: 2, Col: 5)
                   Stop = (Ln: 9, Col: 5) } }] }