input: 
    let obj = {
      5: "world",
      "hello": 10,
      [Symbol.iterator]: fn () => 5,
    };
    
output: Ok
  { Items =
     [Stmt
        { Kind =
           Decl
             { Kind =
                VarDecl
                  { Declare = false
                    Pattern = { Kind = Ident { Name = "obj"
                                               IsMut = false
                                               Assertion = None }
                                Span = { Start = (Ln: 2, Col: 9)
                                         Stop = (Ln: 2, Col: 13) }
                                InferredType = None }
                    TypeAnn = None
                    Init =
                     Some
                       { Kind =
                          Object
                            { Elems =
                               [Property
                                  ({ Start = (Ln: 3, Col: 7)
                                     Stop = (Ln: 3, Col: 17) }, Number (Int 5),
                                   { Kind = Literal (String "world")
                                     Span = { Start = (Ln: 3, Col: 10)
                                              Stop = (Ln: 3, Col: 17) }
                                     InferredType = None });
                                Property
                                  ({ Start = (Ln: 4, Col: 7)
                                     Stop = (Ln: 4, Col: 18) }, String "hello",
                                   { Kind = Literal (Number (Int 10))
                                     Span = { Start = (Ln: 4, Col: 16)
                                              Stop = (Ln: 4, Col: 18) }
                                     InferredType = None });
                                Property
                                  ({ Start = (Ln: 5, Col: 7)
                                     Stop = (Ln: 5, Col: 36) },
                                   Computed
                                     { Kind =
                                        Member
                                          ({ Kind = Identifier "Symbol"
                                             Span = { Start = (Ln: 5, Col: 8)
                                                      Stop = (Ln: 5, Col: 14) }
                                             InferredType = None }, "iterator",
                                           false)
                                       Span = { Start = (Ln: 5, Col: 8)
                                                Stop = (Ln: 5, Col: 23) }
                                       InferredType = None },
                                   { Kind =
                                      Function
                                        { Sig = { TypeParams = None
                                                  Self = None
                                                  ParamList = []
                                                  ReturnType = None
                                                  Throws = None
                                                  IsAsync = false }
                                          Body =
                                           Expr
                                             { Kind = Literal (Number (Int 5))
                                               Span =
                                                { Start = (Ln: 5, Col: 35)
                                                  Stop = (Ln: 5, Col: 36) }
                                               InferredType = None } }
                                     Span = { Start = (Ln: 5, Col: 26)
                                              Stop = (Ln: 5, Col: 36) }
                                     InferredType = None })]
                              Immutable = false }
                         Span = { Start = (Ln: 2, Col: 15)
                                  Stop = (Ln: 6, Col: 6) }
                         InferredType = None }
                    Else = None }
               Span = { Start = (Ln: 2, Col: 5)
                        Stop = (Ln: 7, Col: 5) } }
          Span = { Start = (Ln: 2, Col: 5)
                   Stop = (Ln: 7, Col: 5) } }] }