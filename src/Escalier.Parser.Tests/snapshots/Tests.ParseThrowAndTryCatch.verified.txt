input: 
    let foo = fn (x) {
      if x < 0 {
        throw "x must be positive";
      }
      return x;
    };
    let bar = fn (x) {
      let result = try {
        foo(x);
      } catch {
        | _ => 0
      };
      return result;
    };
    
output: Ok
  { Items =
     [Stmt
        { Kind =
           Decl
             { Kind =
                VarDecl
                  { Declare = false
                    Pattern = { Kind = Ident { Name = "foo"
                                               IsMut = false
                                               Assertion = None }
                                Span = { Start = (Ln: 2, Col: 9)
                                         Stop = (Ln: 2, Col: 13) }
                                InferredType = None }
                    TypeAnn = None
                    Init =
                     Some
                       { Kind =
                          Function
                            { Sig =
                               { TypeParams = None
                                 Self = None
                                 ParamList =
                                  [{ Pattern =
                                      { Kind = Ident { Name = "x"
                                                       IsMut = false
                                                       Assertion = None }
                                        Span = { Start = (Ln: 2, Col: 19)
                                                 Stop = (Ln: 2, Col: 20) }
                                        InferredType = None }
                                     TypeAnn = None
                                     Optional = false }]
                                 ReturnType = None
                                 Throws = None
                                 IsAsync = false }
                              Body =
                               Block
                                 { Span = { Start = (Ln: 2, Col: 22)
                                            Stop = (Ln: 7, Col: 6) }
                                   Stmts =
                                    [{ Kind =
                                        Expr
                                          { Kind =
                                             IfElse
                                               ({ Kind =
                                                   Binary
                                                     ("<",
                                                      { Kind = Identifier "x"
                                                        Span =
                                                         { Start =
                                                            (Ln: 3, Col: 10)
                                                           Stop =
                                                            (Ln: 3, Col: 12) }
                                                        InferredType = None },
                                                      { Kind =
                                                         Literal
                                                           (Number (Int 0))
                                                        Span =
                                                         { Start =
                                                            (Ln: 3, Col: 14)
                                                           Stop =
                                                            (Ln: 3, Col: 16) }
                                                        InferredType = None })
                                                  Span =
                                                   { Start = (Ln: 3, Col: 10)
                                                     Stop = (Ln: 3, Col: 16) }
                                                  InferredType = None },
                                                { Span =
                                                   { Start = (Ln: 3, Col: 16)
                                                     Stop = (Ln: 6, Col: 7) }
                                                  Stmts =
                                                   [{ Kind =
                                                       Expr
                                                         { Kind =
                                                            Throw
                                                              { Kind =
                                                                 Literal
                                                                   (String
                                                                      "x must be positive")
                                                                Span =
                                                                 { Start =
                                                                    (Ln: 4, Col: 15)
                                                                   Stop =
                                                                    (Ln: 4, Col: 35) }
                                                                InferredType =
                                                                 None }
                                                           Span =
                                                            { Start =
                                                               (Ln: 4, Col: 9)
                                                              Stop =
                                                               (Ln: 4, Col: 35) }
                                                           InferredType = None }
                                                      Span =
                                                       { Start = (Ln: 4, Col: 9)
                                                         Stop = (Ln: 4, Col: 35) } }] },
                                                None)
                                            Span = { Start = (Ln: 3, Col: 7)
                                                     Stop = (Ln: 6, Col: 7) }
                                            InferredType = None }
                                       Span = { Start = (Ln: 3, Col: 7)
                                                Stop = (Ln: 6, Col: 7) } };
                                     { Kind =
                                        Return
                                          (Some
                                             { Kind = Identifier "x"
                                               Span =
                                                { Start = (Ln: 6, Col: 14)
                                                  Stop = (Ln: 6, Col: 15) }
                                               InferredType = None })
                                       Span = { Start = (Ln: 6, Col: 7)
                                                Stop = (Ln: 7, Col: 5) } }] }
                              Captures = None
                              InferredType = None }
                         Span = { Start = (Ln: 2, Col: 15)
                                  Stop = (Ln: 7, Col: 6) }
                         InferredType = None }
                    Else = None }
               Span = { Start = (Ln: 2, Col: 5)
                        Stop = (Ln: 8, Col: 5) } }
          Span = { Start = (Ln: 2, Col: 5)
                   Stop = (Ln: 8, Col: 5) } };
      Stmt
        { Kind =
           Decl
             { Kind =
                VarDecl
                  { Declare = false
                    Pattern = { Kind = Ident { Name = "bar"
                                               IsMut = false
                                               Assertion = None }
                                Span = { Start = (Ln: 8, Col: 9)
                                         Stop = (Ln: 8, Col: 13) }
                                InferredType = None }
                    TypeAnn = None
                    Init =
                     Some
                       { Kind =
                          Function
                            { Sig =
                               { TypeParams = None
                                 Self = None
                                 ParamList =
                                  [{ Pattern =
                                      { Kind = Ident { Name = "x"
                                                       IsMut = false
                                                       Assertion = None }
                                        Span = { Start = (Ln: 8, Col: 19)
                                                 Stop = (Ln: 8, Col: 20) }
                                        InferredType = None }
                                     TypeAnn = None
                                     Optional = false }]
                                 ReturnType = None
                                 Throws = None
                                 IsAsync = false }
                              Body =
                               Block
                                 { Span = { Start = (Ln: 8, Col: 22)
                                            Stop = (Ln: 15, Col: 6) }
                                   Stmts =
                                    [{ Kind =
                                        Decl
                                          { Kind =
                                             VarDecl
                                               { Declare = false
                                                 Pattern =
                                                  { Kind =
                                                     Ident { Name = "result"
                                                             IsMut = false
                                                             Assertion = None }
                                                    Span =
                                                     { Start = (Ln: 9, Col: 11)
                                                       Stop = (Ln: 9, Col: 18) }
                                                    InferredType = None }
                                                 TypeAnn = None
                                                 Init =
                                                  Some
                                                    { Kind =
                                                       Try
                                                         { Body =
                                                            { Span =
                                                               { Start =
                                                                  (Ln: 9, Col: 24)
                                                                 Stop =
                                                                  (Ln: 11, Col: 9) }
                                                              Stmts =
                                                               [{ Kind =
                                                                   Expr
                                                                     { Kind =
                                                                        Call
                                                                          { Callee =
                                                                             { Kind =
                                                                                Identifier
                                                                                  "foo"
                                                                               Span =
                                                                                { Start =
                                                                                   (Ln: 10, Col: 9)
                                                                                  Stop =
                                                                                   (Ln: 10, Col: 12) }
                                                                               InferredType =
                                                                                None }
                                                                            TypeArgs =
                                                                             None
                                                                            Args =
                                                                             [{ Kind =
                                                                                 Identifier
                                                                                   "x"
                                                                                Span =
                                                                                 { Start =
                                                                                    (Ln: 10, Col: 13)
                                                                                   Stop =
                                                                                    (Ln: 10, Col: 14) }
                                                                                InferredType =
                                                                                 None }]
                                                                            OptChain =
                                                                             false
                                                                            Throws =
                                                                             None }
                                                                       Span =
                                                                        { Start =
                                                                           (Ln: 10, Col: 9)
                                                                          Stop =
                                                                           (Ln: 10, Col: 15) }
                                                                       InferredType =
                                                                        None }
                                                                  Span =
                                                                   { Start =
                                                                      (Ln: 10, Col: 9)
                                                                     Stop =
                                                                      (Ln: 10, Col: 15) } }] }
                                                           Catch =
                                                            Some
                                                              [{ Span =
                                                                  { Start =
                                                                     (Ln: 12, Col: 9)
                                                                    Stop =
                                                                     (Ln: 13, Col: 7) }
                                                                 Pattern =
                                                                  { Kind =
                                                                     Ident
                                                                       { Name =
                                                                          "_"
                                                                         IsMut =
                                                                          false
                                                                         Assertion =
                                                                          None }
                                                                    Span =
                                                                     { Start =
                                                                        (Ln: 12, Col: 11)
                                                                       Stop =
                                                                        (Ln: 12, Col: 13) }
                                                                    InferredType =
                                                                     None }
                                                                 Guard = None
                                                                 Body =
                                                                  Expr
                                                                    { Kind =
                                                                       Literal
                                                                         (Number
                                                                            (Int
                                                                               0))
                                                                      Span =
                                                                       { Start =
                                                                          (Ln: 12, Col: 16)
                                                                         Stop =
                                                                          (Ln: 13, Col: 7) }
                                                                      InferredType =
                                                                       None } }]
                                                           Finally = None
                                                           Throws = None }
                                                      Span =
                                                       { Start =
                                                          (Ln: 9, Col: 20)
                                                         Stop = (Ln: 13, Col: 8) }
                                                      InferredType = None }
                                                 Else = None }
                                            Span = { Start = (Ln: 9, Col: 7)
                                                     Stop = (Ln: 14, Col: 7) } }
                                       Span = { Start = (Ln: 9, Col: 7)
                                                Stop = (Ln: 14, Col: 7) } };
                                     { Kind =
                                        Return
                                          (Some
                                             { Kind = Identifier "result"
                                               Span =
                                                { Start = (Ln: 14, Col: 14)
                                                  Stop = (Ln: 14, Col: 20) }
                                               InferredType = None })
                                       Span = { Start = (Ln: 14, Col: 7)
                                                Stop = (Ln: 15, Col: 5) } }] }
                              Captures = None
                              InferredType = None }
                         Span = { Start = (Ln: 8, Col: 15)
                                  Stop = (Ln: 15, Col: 6) }
                         InferredType = None }
                    Else = None }
               Span = { Start = (Ln: 8, Col: 5)
                        Stop = (Ln: 16, Col: 5) } }
          Span = { Start = (Ln: 8, Col: 5)
                   Stop = (Ln: 16, Col: 5) } }] }